"""creation base

Revision ID: 7c3768b1f016
Revises: 
Create Date: 2024-10-26 23:37:29.645366

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from backend.db_proxy.common_db.db_abstract import schema


# revision identifiers, used by Alembic.
revision: str = "7c3768b1f016"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tg_bot_staff",
        sa.Column("telegram_name", sa.String(), nullable=False),
        sa.Column("telegram_id", sa.BigInteger(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("surname", sa.String(), nullable=True),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column(
            "role",
            sa.Enum(
                "admin",
                "manager",
                "community_manager",
                "activists_manager",
                "recruitment_manager",
                "mentoring_manager",
                name="staff_role",
                schema=schema,
                inherit_schema=True,
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        schema=schema,
    )
    op.create_table(
        "users",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("surname", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("avatars", sa.ARRAY(sa.String(length=300)), nullable=True),
        sa.Column("city_live", sa.String(length=200), nullable=True),
        sa.Column("country_live", sa.String(length=100), nullable=True),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column("linkedin_link", sa.String(length=100), nullable=True),
        sa.Column("telegram_name", sa.String(length=200), nullable=True),
        sa.Column("telegram_id", sa.BIGINT(), nullable=True),
        sa.Column(
            "requests_to_society",
            sa.ARRAY(sa.String(length=100)),
            nullable=True,
        ),
        sa.Column(
            "professional_interests",
            sa.ARRAY(sa.String(length=100)),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        schema=schema,
    )
    # предоставляем необходимые доступы для пользователя YNDXFamily_db_owner
    op.execute(f'GRANT USAGE ON SCHEMA {schema} TO "YNDXFamily_db_owner"')
    op.execute(
        f'GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA {schema} TO "YNDXFamily_db_owner"')
    op.execute(f'GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA {schema} TO "YNDXFamily_db_owner"')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users", schema=schema)
    op.drop_table("tg_bot_staff", schema=schema)
    op.execute(f"DROP TYPE {schema}.staff_role")
    # ### end Alembic commands ###
